on: [push]
env:
  AZURE_CONTAINER_REGISTRY: k8image
  PROJECT_NAME: azure-vote-app
  RESOURCE_GROUP: myResourceGroup
  CLUSTER_NAME: myAKSCluster
  NAMESPACE: azure-app
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/docker-login@v1
      with:
        login-server: k8image.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - run: |
        docker build . -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/myimage:${{ github.sha }}
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/myimage:${{ github.sha }}
    - uses: azure/aks-set-context@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
      id: login
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        container-registry-username: ${{ secrets.ACR_USERNAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: ${{ env.AZURE_CONTAINER_REGISTRY }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          azure-vote-all-in-one-redis.yaml
        images: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/myimage:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
